FORMAT: 1A
HOST: http://server.aouk.co.uk/services/rest
# AO Explin API

<style type = "text/css" >
    .fixedColumns
    {
        vertical-align:top;
        display: inline-block;
    }
    .scrollableTable
    {
        display: inline-block;
        width:100px;
        white-space: nowrap;
        overflow-x: scroll;
    }
</style>


## Purpose
The AO Explin API is designed to provide internal AO projects and partners with a set of API calls to enable the construction of products and associated assets for websites, applications or similar, for integration into existing systems of the creation of new channels.  
For further information please refer to the www.aouk.co.uk or www.ao-americas.com websites.


## API Dataset
The dataset of products available in the AO Explin API include:  
- Product IDs
- Product Meta Data
- Copy + Meta Data
- Images + Meta Data + URLs
- Logos + Meta Data + URLs
- Videos + Meta Data + URLs
- Prices + Meta Data

- Relationships between 2 or more Products
- Relationships between 2 or more Objects/Products


Please note that this includes the relationships of _Parent/Child Product Packages_  as in "Holidays Packages and Component Products" and "Relevant Products" i.e. Hotel A is associated with Hotel B via Wedding Experience.

Parent and Child relationships are referenced within the dataset as sub_arrays of Product IDs.

## Categories
The API is divided into several categories

- _Search_ - Based upon defined fields
- _Deltas_ - Changes in content and datasets
- _Batch_ - Calling of data en mass
- _Schema_ - Calls relating to existence of custom metadata and relationships


## Technology stack
- _Apache Felix_ (OSGI container)(4.6)
- _Couchbase_ (4.0)
- _Jersey_(JAX-RS) (2.16.1)
- _Jetty_ (9.2)

## Terms of Use
By using the AO Explin API you are agreeing to AO UK Ltd terms of use.

## Authorization

Every request requires server authentication credentials which are used in the _Authorization_ field

The Authorization field is constructed in the following manner:
- The username and password are combined into a string separated by a colon, e.g.: username:password
- The resulting string is encoded using the RFC2045-MIME variant of Base64, except not limited to 76 char/line
- The authorization method and a space i.e. "Basic " is then put before the encoded string

For example, if the user agent uses Aladdin as the username and OpenSesame as the password then the field is formed as follows:    

    Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l

## OSGI Modules (Bundles)

The AO Explin API has the ability to call extra OSGI Modules processing routines that are called _**bundles**_ to augment the dataset being returned,
based upon third party systems. i.e. CRMs, Pricing and Availability, Stock and Distribution systems or other business processes as defined.

It therefore means that different AO UK Ltd customers could have a different set of _**bundles**_ to call upon from within the different supplied systems.

It is possible to call one or more bundles in  order, known as a _**OSGIChain**_ separated by a comma    
_i.e. OSGiChain=customer.add-10%-to-price.id, customer.remove-short-lifespan-products.id_
<!--The key OSGI modules:
- bundle-manager (registry 'Chain' modules in AO Explin API)  
- couchbase-mod (Couchbase Data Layer )  
- explin-rest (REST implementation services )
- services (core interface)
- tc611 (Time Capsule)
- testapp (js application for testing services)
- profile-manager (apply the profile)-->


## JSON Dataformat

JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is ideal for humans to read and write as well as machines to parse and generate. 

## Profiles

##### Filter Datasets
Profiles are a series of JSON documents that contain a list of _fields_ that the call should return in the dataset per a product. Each profile is assigned an unique _profilename_.
If a field is not referenced in this file, then it is considered redundant and will be removed from the resulting dataset. 
This allows for a more concise dataset to be create with the superflous fields being exposed.

##### Rename Dataset Fields
Profiles also allow for the renaming of fields at the point of export which can be used to standardise the resulting dataset.
An example of this could be where there are two _descriptions_ for a product, where one description is Brand X and the Other description is Brand Y.
    brandX.description
    brandY.description
If the data is called with a Profile that is profilename = "BrandXprofile", where only the Brand X information is requested, the brandX.description can be renamed to just _description_.
Another Profile could have the profilename = "BrandYprofile" could also rename the brandY.description to _description_, therefore a more simplistic template which fits both brands can be created.


## Verbs and Vocabulary
- _Get_ - Retrieve any Information  
- _Post_ - Add any Products 
- _Put_ - Edit any products 
- _Delete_ - Delete any Products

## Headers

- _1xxxx_ - Information 
- _2xxxx_ - Success 
- _3xxxx_ - Redirect 
- _4xxxx_ - Client Error 
- _5xxxx_ - Server Error 

Typical examples and their meanings:
   
- _200_ - OK/success  (the call has been processed and the result is successful) 
- _201_ - Created 
- _202_ - Accepted (Underway but not complete yet, i.e.. Queued or a long process that will respond eventually) 
- _204_ - No Content (primary response when you delete a product)

- _301_ - Moved Permanently 
- _302_ - Moved Temporary 

- _400_ - Bad Request (failed due to client error, i.e. Not AOs fault!) 
- _401_ - Requires Authentication 
- _403_ - Forbidden, i.e not Authorised for this option. 
- _404_ - Resource not found (no data as in product missing) 


## Media Type in Header

AO Explin API supports JSON format which needs to be specified within the header of the API call

    HTTP/1.1 200 OK
    Server: aws.aouk.co.uk
    Date: Mon, 13 Jul 2015 13:37:27 GMT
    Content-Type: application/json; charset=utf-8
    Content-Length: 2004
    Status: 200 OK
    Cache-Control: public, max-age=60, s-manage=60

How is it structured? use X-AO for the start of the headers i.e.  

    X-AO-Media-Type: explin.v1                    
    X-AO-Request-ID:  51946421:7250:6882ED3:55A3BF16 
    X-AO-Session-ID:   2311D13F6A416 

## States
Stateless, but with a date/time stamp to allow control and reference. Some calls use date/time as parameters.

# Group AO Explin API System Calls
General system calls regarding the AO Explin API 

## ListServices [/]



### Get ListServices [GET]

+ Response 200 (application/json)

        {
            "name": "v1/products", 
            "method": "GET",
            "queryParams":["OSGIChain", "City", "Country", "offset", "limit"]},
                {"name": "v1/products/deltas", 
                "method": "GET", 
                "queryParams":["startDateTime","endDateTime","loadProduct", "offset", "limit"]},
                    {"name": "v1/products/parentAndChildren", "method": "GET", "queryParams":["id"]},
                    {"name": "v1/products/children", "method": "GET", "queryParams":["id"]},
                    {"name": "v1/products/parent", "method": "GET", "queryParams":["id"]},
                    {"name": "v1/products/hierarchy", "method": "GET"},
                    {"name": "AvailableBundles", "method": "GET"
                }


# Group Product Calls


## ProductByDocID [/v1/products/ids?id={id1}&id={id2}&id={id3}&profile={profilename}]

The *_product_* call returns 1 or more products and the associated metadata and objects, based upon the _Product ID_ (sometimes referred to as the SKU Number) of the product(s).

This call returns the data based upon the fact the _Document ID_ of the JSON objects matches the _Product ID_, therefore returns the information at an optimum

<table style="width: 100%; margin: 12px 0 0 0;">
<tr><td colspan="2"><strong>Required Parameters</strong></td></tr>
<tr><td colspan="2"><strong>id(s)</strong> - one or more Product IDs (string)</td></tr>
<tr><td colspan="2"><strong>Optional Parameters</strong></td></tr>
<tr><td style="padding-right: 40px;"><strong>bundlename(s)</strong> - one or more bundles (string) than can be applied to augment the data</td></tr>
<tr><td style="padding-right: 40px;"><strong>profilename</strong> - to filter and rename fields within the dataset as defined in the profilename (string)</td></tr>
</table>



+ Parameters
    + id1 (required, string, `AA000002FG`) ... product id (document id)
    + id2 (required, string, `AA0026262`) ... product id (document id)
    + id3 (required, string, `AA002352525`) ... product id (document id)
    + profilename (optional, string, `Hotel`) ... apply profile to product

### Get ProductByDocID [GET]



+ Response 200 (application/json)

        {   
            "Crib__Rollaway":null,
            "Internet__Wireless__Fee":null,
            "Child__Program":null,
            "Suburb":"",
            "Eco__Friendly":null,
            "Discount__Seniors":null,
            "Number__of__Rooms":"0",
            "Local__Currency":null,
            "Number__of__Floors":"0",
            "Club__Room__Benefits":null,"Meal__Inc__All__Inclusive":null,"Department":null,"Country__Code":"FR","Fitness__Equipment":"0","Recreation__Game__Room":"0",
            "Daily__Maid":"0","Beauty__or__Hair__Salon":null,"Beach__Location":"0","Swimming__Pool":"0","Snowski":"0","NS__City__Place__Key":"0","Air__Conditioning":"0",
            "Laundry__Service":null,"Refrigerator":"0","Discount__AAA":null,"Baby__Sitting":null,"Pet__Size__Limit":"0","Longitude":null,"State__Code":"","Beach__Friendly":null,
            "Tea__Coffee__Making__Facilities":"0","Newspaper":"0","Meal__Inc__MAP":null,"Whirlpool":"0","Country":"France","Export__Status":"0","Sports__Friendly":null,"Telephone__Message":"0",
            "Fireplace":"0","Food__&__Beverage__Friendly":null,"In__room__safe":"0","Bikes":"0","Family__Voice":"N","Description":"Ibis Budget Pontault Combault RN4","VCR":"0","Day__Spa":"0",
            "Horseback":"0","Microwave":"0","Airport__Near":null,"NS__Base__City__Place__Key":"0","Internet__Wireless":null,"Checkout__Time":"0","Pets__Allowed":null,"Iron__and__Ironing__Board":"0",
            "Luxury__Voice":"N","Internet__Common":null,"Discount__Group":null,"Wheel__Chair__Access__in__Hotel":null,"Country__Group":"","Health__Club__or__Gym":"0","Checkin__Time":"0","Parking":null,
            "Suburb__Location":"0","Multilingual__Staff":null,"Shopping__Friendly":null,"Pet__Fee":null,"Swimming__Pools__Indoor__No":"0","Jogging":"0","Tourist__Area__Location":"0","Business__Friendly":null,
            "Television":"0","Balcony__or__Terrace":"0","SKU_ID":"100228","Meal__Inc__AP":null,"ATM":null,"Laundry__Room":null,"Extended__Stay":null,"Car__Rental__Desk":null,"Latitude":null,"All__Suite":null,
            "Business__Center":null,"Beach":"0","Year__Built":"0","Rural__Location":"0","Internet__Cable":null,"Childs__Pool":"0","Minibar":"0","Global__ID":"","Cable__TV":"0","Hottub":"0",
            "Pet__Size__Limit__Indicator":null,"Non__Smoking":"0","Golf":"0","City__Code":"","Complementary__Transport":null,"No__of__On__Site__Bars":"0","City":"Pontault-Combault","Resort__Location":null,
            "Airport__Location":"0","Internet__Common__Wireless__Fee":null,"Kitchenette":"0","City__Location":"0","Active":"0","Mountain__Location":"0","Mod.__Date":"2015/06/29 04:47:28.000000000",
            "Couples__Friendly":null,"Conference__Centre":null,"State":"","Discount__Govt__MilIitary":null,"Swimming__Pools__Outdoor__No":"0","No__of__On__Site__Restaurants":"0","Management__Facility":null,
            "Region":"","Meal__Inc__CP":null,"Tennis__Court__Indoor":"0","Wedding__Friendly":null,"Pet__Friendly":null,"Adult__Friendly":null,"Convention__Centre__Location":"0","Boutique__Voice":"N",
            "User":"core","Pet__Services":null,"Internet__Common__Fee":null,"Telephone":"0","Parking__Valet":null,"Family__Friendly":null,"Room__Service":null,"Singles__Friendly":null,"Discount__Corp":null,
            "Scuba":"0","Boats":"0","Swimming__Pool__Outdoor":"0","Region__Code":"","Luxury__Friendly":null,"Computer__Available":null,"Water__Ski":"0",
            "Product__id":"AA160229","LGBT__Friendly":null,
            "Fishing":"0","Fax__Available":null,"Internet__Common__Wireless":null,"Parking__Cost":null,"Region__URL":"","Shopping__Mall":"0","Snorkeling":"0","Phone":"8-9268-0944",
            "Internet__Cable__Fee":null,"Product__Type":"0","Tennis__Court__Outdoor":"0","Mod_Num":"0","Pet__Amenities":null,"Meal__Inc__FB":null,"Comments":"","Vendor":null,
            "Gift__Shop__or__Boutique":null,"Product__Created":null,"Concierge":null,"Casino":"0","Year__Rennovated":"0","Spa__-__Relax__Friendly":null,"Complementary__Coffee":null,"Fax":"1-6443-8550"
        }
        
        

## Products [/v1/products?OSGIChain={bundlename}&City={city}&offset={offset}&limit={limit}&profile={profileName}]

Performs a search of the AO Campaign system for products based upon metadata. Please note that the source database can be indexed to increase performance of the speed of the returned dataset


<table style="width: 100%; margin: 12px 0 0 0;">
<tr><td><strong>Required Parameters</strong></td></tr>
<tr><td><strong>key => value</strong> - the <i>key</i> (string) refers to the name of the field to be searched upon where the <i>value</i> (string) refers to the content of the field
<i>i.e. city=Sydney</i></td></tr>

<tr><td><strong>OR</strong></td></tr>

<tr><td><strong>key => value_array</strong> - the key refers to the name of the field to be searched upon where the value refers to the content items of the field separated by a comma
<i>i.e. city=Sydney, Toronto, New York</i></td></tr>

<tr><td><strong>Optional Parameters</strong></td></tr>
<tr><td style="padding-right: 40px;"><strong>bundlename(s)</strong> - one or more bundles than can be applied to augment the data</td></tr>
<tr><td style="padding-right: 40px;"><strong>profilename</strong> - to filter and rename field within the dataset</td></tr>
</table>

+ Parameters
    + bundlename (optional, string, `fake.bundle.id`) ... OSGI Chain
    + city (optional, string, `San Francisco,Atlanta,New York`) ... Key Pair Value Array
    + offset (optional, number, `0`) ... offset, default value is 0
    + limit (optional, number, `10`) ... limit, default value is 10
    + profileName (optional, string, `Hotel`) ... apply profile to products

### Get Products [GET]
+ Request

    + Headers
    
            Authorization: Basic ABCDEF
        
+ Response 200 (application/json)

    + Headers
    
            ETag: "34ad82f6b67967518c3d69e99f503ecf"
            Cookie: "JSESSIONID=1wbkng0xx01t0vw95dx0l9w92"
            
    + Body

            [{"beer-sample":{"geo":{"accuracy":"ROOFTOP","lon":-122.393,"lat":37.7825},
                "country":"United States","website":"http://www.21st-amendment.com/","address":["563 Second Street"],"code":"94107","city":"San Francisco","phone":"1-415-369-0900","name":"21st Amendment Brewery Cafe","description":"The 21st Amendment Brewery offers a variety of award winning house made brews and American grilled cuisine in a comfortable loft like setting. Join us before and after Giants baseball games in our outdoor beer garden. A great location for functions and parties in our semi-private Brewers Loft. See you soon at the 21A!","state":"California","type":"brewery","updated":"2010-10-24 13:54:07"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"ROOFTOP","lon":-122.401,"lat":37.7635},"country":"United States","website":"","address":["1705 Mariposa Street"],"code":"94107","city":"San Francisco","phone":"1-415-863-8350","name":"Anchor Brewing","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"ROOFTOP","lon":-84.4353,"lat":33.818},"country":"United States","website":"http://www.atlantabrewing.com/","address":["2323 Defoor Hills Rd NW"],"code":"30318","city":"Atlanta","phone":"404-355-5558","name":"Atlanta Brewing Company","description":"","state":"Georgia","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"ROOFTOP","lon":-122.51,"lat":37.7694},"country":"United States","website":"","address":["1000 Great Highway"],"code":"94121","city":"San Francisco","phone":"1-415-386-8439","name":"Beach Chalet Brewery","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"ROOFTOP","lon":-122.398,"lat":37.7756},"country":"United States","website":"","address":["650 Fifth Street #403"],"code":"94107","city":"San Francisco","phone":"","name":"Big Bang Brewery (Closed)","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"GEOMETRIC_CENTER","lon":-74.0086,"lat":40.7457},"country":"United States","website":"http://chelseabrewingco.com/","address":["Chelsea Piers, Pier 59"],"code":"10011","city":"New York","phone":"212.336.6440","name":"Chelsea Brewing Company","description":"Chelsea Brewing Company, rated the best brewery in New York, is a first class waterfront restaurant and the only micro-brewery in Manhattan located at pier 59.With over 15 years of experience, and 8 National Awards, we are proud to serve up to 27 natural hand-crafted ales and specialty beers using only the finest malts and hops from around the world. We offer beer tastings, brewery tours and group packages.","state":"New York","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"APPROXIMATE","lon":-122.419,"lat":37.7749},"country":"United States","website":"","address":[],"code":"","city":"San Francisco","phone":"","name":"Golden Gate Park Brewery","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"APPROXIMATE","lon":-73.9874,"lat":40.7323},"country":"United States","website":"http://www.heartlandbrewery.com/","address":[],"code":"10003","city":"New York","phone":"1-212-645-3400","name":"Heartland Brewery Union Square","description":"(No longer brewing)","state":"New York","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"RANGE_INTERPOLATED","lon":-122.445,"lat":37.7702},"country":"United States","website":"http://www.magnoliapub.com/","address":["1398 Haight Street"],"code":"94117","city":"San Francisco","phone":"1-415-864-7468","name":"Magnolia Pub and Brewery","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"RANGE_INTERPOLATED","lon":-84.3056,"lat":33.9089},"country":"United States","website":"","address":["2015 Afond Court"],"code":"30341","city":"Atlanta","phone":"1-770-841-2953","name":"New River Brewing","description":"","state":"Georgia","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"RANGE_INTERPOLATED","lon":-122.419,"lat":37.7481},"country":"United States","website":"","address":["3435 Cesar Chavez #227"],"code":"94110","city":"San Francisco","phone":"1-650-343-2739","name":"Shmaltz Enterprises","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"APPROXIMATE","lon":-122.419,"lat":37.7749},"country":"United States","website":"http://www.shmaltz.com/","address":[],"code":"","city":"San Francisco","phone":"","name":"Shmaltz Brewing Company","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"RANGE_INTERPOLATED","lon":-122.381,"lat":37.7387},"country":"United States","website":"","address":["1195-A Evans Avenue"],"code":"94124","city":"San Francisco","phone":"1-415-642-3371","name":"Speakeasy Ales and Lagers","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"ROOFTOP","lon":-84.3813,"lat":33.8087},"country":"United States","website":"http://www.sweetwaterbrew.com/","address":["195 Ottley Drive"],"code":"30324","city":"Atlanta","phone":"1-404-691-2537","name":"Sweetwater Brewing - Atlanta","description":"","state":"Georgia","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"},
                {"beer-sample":{"geo":{"accuracy":"ROOFTOP","lon":-122.4,"lat":37.7855},"country":"United States","website":"","address":["661 Howard Street"],"code":"94105","city":"San Francisco","phone":"1-415-974-0905","name":"ThirstyBear Brewing","description":"","state":"California","type":"brewery","updated":"2010-07-22 20:00:20"},"fakeBundle":"Processed"}
            ]
            
+ Response 401

+ Request

    + Headers
    
            Cookie: "JSESSIONID=1wbkng0xx01t0vw95dx0l9w92"
            If-None-Match: "34ad82f6b67967518c3d69e99f503ecf"
    
+ Response 304 (not modified)




# Group Parent & Child Calls

Products returned by the AO Explin API can also contain relationships to other products within this AO Campaign System.
This information is stored as a number of arrays within the JSON objects. There are possible "parent" arrays and "child" arrays depending on the product itself.
The relationship of the Parent/Child is also contained with the JSON. 
_i.e. A hotel could have many children, and the relationship between the parents and the children could be different.
A hotel cold have children that are rooms or children that are restaurants or spas._

It is normal for each of the contained Parent and Child Arrays to contain 
+ _ObjectType_ = the name of the relationship between parent(s) and child(ren) of the array
+ _ObjectTypeID_ = a unique reference for the relationship between parent(s) and child(ren) of the array
+ _Product IDs_ = a list of products related
+ _Description_ = the main description for each of the Product IDs
+ _SKUID_ = a unique number associated to the product (depreciating soon)
    
    

## Parent [/v1/products/parent?id={id1}&id={id2}&id={id3}]

It is possible to request the parents of one or more products by using Product IDs

<table style="width: 100%; margin: 12px 0 0 0;">
<tr><td colspan="2"><strong>Required Parameters</strong></td></tr>
<tr><td colspan="2"><strong>id(s)</strong> - one or more Product IDs (string)</td></tr>
<tr><td colspan="2"><strong>Optional Parameters</strong></td></tr>
</table>



+ Parameters
    + id1 (required, string, `AA000002FG`) ... product id
    + id2 (required, string, `AA0026262`) ... product id
    + id3 (required, string, `AA002352525`) ... product id
    


### Get Parent [GET]
+ Request

    + Headers
    
            Authorization: Basic ABCDEF
        
+ Response 200 (application/json)

    + Body

            [{"Geo Latitude":30.68932,"aoCode":"AA001124"}]


## Children [/v1/products/children?id={id1}&id={id2}&id={id3}]

It is possible to request the parents of one or more products by using Product IDs

<table style="width: 100%; margin: 12px 0 0 0;">
<tr><td colspan="2"><strong>Required Parameters</strong></td></tr>
<tr><td colspan="2"><strong>id(s)</strong> - one or more Product IDs (string)</td></tr>
<tr><td colspan="2"><strong>Optional Parameters</strong></td></tr>
</table>

+ Parameters
    + id1 (required, string, `AA000002FG`) ... product id
    + id2 (required, string, `AA0026262`) ... product id
    + id3 (required, string, `AA002352525`) ... product id

### Get Children [GET]
+ Request

    + Headers
    
            Authorization: Basic ABCDEF
        
+ Response 200 (application/json)

    + Body

            [{"Geo Latitude":33.68932,"aoCode":"AA001127","parent_id":"AA001125"}]




## Parent And Children [/v1/products/parentAndChildren?id={id1}&id={id2}&id={id3}]

It is possible to request the both the parents and children of one or more products by using Product IDs

<table style="width: 100%; margin: 12px 0 0 0;">
<tr><td colspan="2"><strong>Required Parameters</strong></td></tr>
<tr><td colspan="2"><strong>id(s)</strong> - one or more Product IDs (string)</td></tr>
<tr><td colspan="2"><strong>Optional Parameters</strong></td></tr>
</table>

+ Parameters
    + id1 (required, string, `AA000002FG`) ... product id
    + id2 (required, string, `AA0026262`) ... product id
    + id3 (required, string, `AA002352525`) ... product id

### Get Parent And Children [GET]
+ Request

    + Headers
    
            Authorization: Basic ABCDEF
        
+ Response 200 (application/json)

    + Body

            [{"Geo Latitude":30.68932,"aoCode":"AA001124"},[{"Geo Latitude":33.68932,"aoCode":"AA001127","parent_id":"AA001125"}]]



# Group Delta Change Calls


## Delta Changes [/v1/products/deltas?startDateTime={startDateTime}&endDateTime={endDateTime}&profile={profileName}&offset={offset}&limit={limit}]

This call is to capture the Change Management of Products and their associated objects between two points in time.

All variables are optional, and using _offset_ and _limit_ it is possible to page through the result dataset 

+ _startDateTime_ expressed as [yyyy, MM, dd, HH, mm, ss]
+ _endDateTime_ expressed as [yyyy, MM, dd, HH, mm, ss]
+ _profileName_
+ _offset_ the starting point to return the dataset
+ _limit_ the number of results to return

+ Parameters
    + startDateTime (optional, string, `[2015,7,1]`) ... date time in array style [yyyy, MM, dd, HH, mm, ss]
    + endDateTime (optional, string, `[2015,10,25]`) ... date time in array style [yyyy, MM, dd, HH, mm, ss]
    + profileName (optional, string, `none`) ... restrict filer (profile)
    + offset (optional, number, `0`) ... offset, the default value is 0
    + limit (optional, number, `10`) ... limit, the default value is 10
    
### Get Delta Changes  [GET]

+ Response 200 (application/json)

        {
            "limit":10,
            "total":5000,
            "offset":0,
            "content":  [  
            {
            "date": "2015-7-21 23:13:32",
            "product": {
                "Product__id":"AA000020",
                 "Crib__Rollaway":null,
            "Internet__Wireless__Fee":null,
            "Child__Program":null,
            "Suburb":"",
            "Eco__Friendly":null,
            "Discount__Seniors":null,
            "Number__of__Rooms":"0",
            "Local__Currency":null,
            "and all rest fields": "..."
                },
            "id": 24,
            "status": "new"
            },
           {
            "date":"2015-7-21 23:13:33",
            "product": {
                "Product__id":"AA000022",
                "Internet__Wireless__Fee":null,
            "Child__Program":null,
            "Suburb":"",
            "Eco__Friendly":null,
            "Discount__Seniors":null,
            "Number__of__Rooms":"0",
            "Local__Currency":null,
            "and all rest fields": "..."
                },
            "id": 30,
            "status": "new"
            }
        ]
        }



# Group Profile Calls

Only the fields defined with the profiles, will be made available and any superflous fields and data will be removed.







## Profile Manager [/services/profileManager]
The following calls allow for the creation, review and deletion of _Profiles_.

### Get All Profiles [GET]
List all the current profiles by profilename
+ Response 200 (application/json)

        {
            "AO_JSON_TYPE": "profile",
           "name": "Hotel",
        "filter": {
        "product": [
            "Description",
            "GTA_Rating",
            "Product__Type"
        ],
        "copy": [
            "Copy__Name",
            "Copy__Text"
        ]
        },
        "keyRename": {
        "product": {
             "GTA_Rating": "Rating",
             "Product__Type": "ProductType"
        },
        "copy": {
             "Copy__Name": "CopyName",
             "Copy__Text": "Text"
        }
        },
        "valueRename":  {
            "copy": {
                "Copy__Name": {
                    "ntm.product.URL.en":"Product URL"
            }
        }
        }
        }
        

        
### Add New Profile [POST]
If the profilename already exists then overwrite the existing profile
+ Request 

        {
           "name": "Hotel",
        "filter": {
        "product": [
            "Description",
            "GTA_Rating",
            "Product__Type"
        ],
        "copy": [
            "Copy__Name",
            "Copy__Text"
        ]
        },
        "keyRename": {
        "product": {
             "GTA_Rating": "Rating",
             "Product__Type": "ProductType"
        },
        "copy": {
             "Copy__Name": "CopyName",
             "Copy__Text": "Text"
        }
        },
        "valueRename":  {
            "copy": {
                "Copy__Name": {
                    "ntm.product.URL.en":"Product URL"
            }
        }
        }
        }
        
+ Response 204

## Delete Profile [/services/profileManager/{profilename}]

### Delete Profile [DELETE]

Specify which profiles should be deleted using the profilename

+ Parameters
    + profilename (required, string, `tour`) ... filter name
    
+ Response 204



## Example Product Call with Profile [/v1/products?id={id1}&profile={profilename}]

+ Parameters
    + id1 (required, string, `AA000002FG`) ... product id (document id)
    + profilename (optional, string, `Hotel`) ... apply profile to products



### Example Call [GET]

+ Response 200 (application/json)

        [
            {
                "Product__id": "AA000000",
                "Country": "France",
                "City":"Pontault-Combault",
                "City__Code": "FPC",
                "Tour__Date":"2015-01-01",
                "Location": ""
            }   
        ]



# Group Hierarchy Calls

## Product Hierarchy [/v1/products/hierarchy]
This service returns a large JSON documents that represents the spatial relationship of all products from a defined Product ID.

This could represent the relationship of stores to brands, departments within stores, products with in departments.

Within a Travel context, this can be a geographic hierarchy of relationships that map countries, regions, citys and locations into perceived representations of the planet.


### Get Hierarchy [GET]

+ Response 200 (application/json)

        {  
        "CHILD":[  
        {  
         "CHILD":[  
            {  
               "CHILD":[  
                  {  
                     "CHILD":[  
                        {  
                           "CHILD":[  
                              {  
                                 "Description":"Leith",
                                 "Product__id":"",
                                 "Product__Type":"0",
                                 "SKU__ID":"377620"
                              },
                              {  
                                 "Description":"Gorgie",
                                 "Product__id":"",
                                 "Product__Type":"0",
                                 "SKU__ID":"377621"
                              }
                           ],
                           "Description":"Edinburgh",
                           "Product__id":"",
                           "Product__Type":"0",
                           "SKU__ID":"377614"
                        }
                     ],
                     "Description":"Scotland",
                     "Product__id":"",
                     "Product__Type":"0",
                     "SKU__ID":"377615"
                  },
                  {  
                     "CHILD":[  
                        {  
                           "CHILD":[  
                              {  
                                 "Description":"Chiswick",
                                 "Product__id":"",
                                 "Product__Type":"0",
                                 "SKU__ID":"377625"
                              }
                           ],
                           "Description":"London",
                           "Product__id":"",
                           "Product__Type":"0",
                           "SKU__ID":"377624"
                        }
                     ],
                     "Description":"England",
                     "Product__id":"",
                     "Product__Type":"0",
                     "SKU__ID":"377623"
                  },
                  {  
                     "Description":"Wales",
                     "Product__id":"",
                     "Product__Type":"0",
                     "SKU__ID":"377626"
                  }
               ],
               "Description":"United Kingdom",
               "Product__id":"",
               "Product__Type":"0",
               "SKU__ID":"377622"
            }
         ],
         "Description":"Europe",
         "Product__id":"",
         "Product__Type":"0",
         "SKU__ID":"377619"
        },
        {  
         "CHILD":[  
            {  
               "Description":"New York",
               "Product__id":"",
               "Product__Type":"0",
               "SKU__ID":"377629"
            }
         ],
         "Description":"America",
         "Product__id":"",
         "Product__Type":"0",
         "SKU__ID":"377628"
        }
        ],
        "Description":"World",
        "Product__id":"",
        "Product__Type":"0",
        "SKU__ID":"377618"
        }



        
        
        
# Group Bundle Calls

Bundles are small OSGI compatible components that can be called in a OSGIChain when making other AO Explin API calls.

Each AO UK Ltd customer may have different bundles available them, and can purchase custom bundles from AO UK Ltd.

## Available Bundles [/AvailableBundles]

### Get Available Bundles [GET]

+ Response 200 (application/json)

        ["fake.bundle.id"]Final